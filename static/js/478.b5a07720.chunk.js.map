{"version":3,"file":"static/js/478.b5a07720.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesListItem/MoviesListItem.module.css?7daa","components/MoviesListItem/MoviesListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx.jsx","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage.jsx","service/ApiConfig.js","service/MoviesService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieLink\":\"MoviesListItem_movieLink__7wLUU\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesListItem.module.css';\n\nconst MovieListItem = ({ movie }) => {\n  const location = useLocation();\n  const moviePath =\n    location.pathname === '/' ? `/movies/${movie.id}` : `${movie.id}`;\n\n  return (\n    <li>\n      <Link\n        to={moviePath}\n        state={{ from: location.pathname }}\n        className={css.movieLink}\n      >\n        {movie.title || movie.name}\n      </Link>\n    </li>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\"};","import PropTypes from 'prop-types';\nimport MovieListItem from '../MoviesListItem';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => (\n        <MovieListItem key={movie.id} movie={movie} />\n      ))}\n    </ul>\n  );\n};\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Searchbar_searchForm__Bt5yh\",\"searchInput\":\"Searchbar_searchInput__+BnhG\",\"searchButton\":\"Searchbar_searchButton__8lE-T\",\"searchLabel\":\"Searchbar_searchLabel__yveFe\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { IconContext } from 'react-icons';\nimport { FaSearch } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport css from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n  const [lastQuery, setLastQuery] = useState('');\n\n  const handleSearchQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.info('Please enter a search query');\n      return;\n    }\n\n    if (query === lastQuery) {\n      toast.info(\n        'Sorry, the result of this request is already in front of you, try another way'\n      );\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n    setLastQuery(query);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.searchForm}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={query}\n          onChange={handleSearchQueryChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          className={css.searchInput}\n        />\n        <button type=\"submit\" className={css.searchButton}>\n          <IconContext.Provider value={{ color: '#007bff', size: 20 }}>\n            <FaSearch className={css.searchIcon} />\n          </IconContext.Provider>\n          <label className={css.searchLabel}>Search</label>\n        </button>\n      </form>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { searchMovies } from '../service/MoviesService';\nimport Searchbar from '../components/Searchbar';\nimport { Loader } from '../components/Loader/Loader';\nimport MoviesList from '../components/MoviesList';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(\n    () => JSON.parse(localStorage.getItem('searchedMovies')) || []\n  );\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem('searchedMovies', JSON.stringify(movies));\n  }, [movies]);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        const searchedMovies = await searchMovies(query);\n        setMovies(searchedMovies);\n\n        if (searchedMovies.length === 0) {\n          toast.info('No movies found.');\n        }\n      } catch (error) {\n        throw new Error('Failed to search movies');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovies();\n  }, [query]);\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {isLoading ? <Loader /> : <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjOGFjODFjMzk0ODNkOGVmMmY5N2ZkNTBjNjA4NmQ1NyIsInN1YiI6IjY0OGYzM2NiYzNjODkxMDBhZTUxODllMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Sy6yeDv4hwTPYW8QyN_kvYlj0SfCrm-aR769hvjNTqI',\n  },\n};\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  headers: options.headers,\n});\n\nexport default axiosInstance;\n","import axiosInstance from './ApiConfig';\n\nasync function fetchTrendingMovies() {\n  try {\n    const response = await axiosInstance.get('trending/all/day?language=en-US');\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function searchMovies(query) {\n  try {\n    const response = await axiosInstance.get(\n      `search/movie?query=${query}&include_adult=false&language=en-US&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axiosInstance.get(`movie/${movieId}?language=en-US`);\n    return response.data;\n  } catch (error) {\n    \n    throw new Error(`Failed to fetch details for movie with ID: ${movieId}`);\n  }\n}\n\nasync function fetchMovieCredits(movieId) {\n  try {\n    const response = await axiosInstance.get(\n      `movie/${movieId}/credits?language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function fetchMovieReviews(movieId) {\n  try {\n    const response = await axiosInstance.get(\n      `movie/${movieId}/reviews?language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst getImageUrl = (path) => {\n  if (!path) return null;\n  return `https://image.tmdb.org/t/p/original${path}`;\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n  getImageUrl\n};\n"],"names":["movie","location","useLocation","moviePath","pathname","id","to","state","from","className","css","title","name","movies","map","onSubmit","useState","query","setQuery","lastQuery","setLastQuery","e","preventDefault","trim","toast","type","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","color","size","JSON","parse","localStorage","getItem","setMovies","isLoading","setIsLoading","useEffect","setItem","stringify","searchMovies","searchedMovies","length","Error","fetchMovies","Loader","MoviesList","axios","baseURL","headers","accept","Authorization","fetchTrendingMovies","axiosInstance","response","data","results","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","getImageUrl","path"],"sourceRoot":""}