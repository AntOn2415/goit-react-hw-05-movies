{"version":3,"file":"static/js/478.1ff5b4be.chunk.js","mappings":"0RACA,GAAgB,WAAa,8BAA8B,YAAc,+BAA+B,aAAe,gCAAgC,YAAc,gC,SC8DrK,MAxDA,YAAkC,IAAbA,EAAY,EAAZA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KA0BA,OACE,0BACE,kBAAML,SAtBW,SAAAM,GACnBA,EAAEC,iBAEmB,KAAjBL,EAAMM,OAKNN,IAAUE,GAOdJ,EAASE,GACTC,EAAS,IACTE,EAAaH,IARXO,EAAAA,GAAAA,KACE,iFANFA,EAAAA,GAAAA,KAAW,8BAcd,EAIiCC,UAAWC,EAAAA,WAAzC,WACE,kBACEC,KAAK,OACLC,KAAK,cACLC,MAAOZ,EACPa,SA/BwB,SAAAT,GAC9BH,EAASG,EAAEU,cAAcF,MAAMG,cAChC,EA8BOC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZV,UAAWC,EAAAA,eAEb,oBAAQC,KAAK,SAASF,UAAWC,EAAAA,aAAjC,WACE,SAAC,cAAD,CAAsBG,MAAO,CAAEO,MAAO,UAAWC,KAAM,IAAvD,UACE,SAAC,MAAD,CAAUZ,UAAWC,EAAAA,gBAEvB,kBAAOD,UAAWC,EAAAA,YAAlB,SAAmC,kBAK5C,E,oBCED,G,QAlDmB,WACjB,OAA0BV,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOsB,EAAP,KAAeC,EAAf,KACA,GAAkCvB,EAAAA,EAAAA,WAAS,GAA3C,eAAOwB,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACF5B,EAAS4B,EAEZ,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WAAM,wCACd,uFACgB,KAAV5B,EADN,iEAMIwB,GAAa,GANjB,UAOiCO,EAAAA,EAAAA,IAAa/B,GAP9C,OAOUgC,EAPV,OAQIV,EAAUU,GAEoB,IAA1BA,EAAeC,QACjB1B,EAAAA,GAAAA,KAAW,oBAXjB,wDAcU,IAAI2B,MAAM,2BAdpB,yBAgBIV,GAAa,GAhBjB,8EADc,uBAAC,WAAD,wBAqBdW,EACD,GAAE,CAACnC,IAOJ,OACE,4BACE,SAAC,EAAD,CAAWF,SAPU,SAAAE,GACvB2B,EAAgB,CAAE3B,MAAAA,IAClBC,EAASD,EACV,IAKIuB,GAAY,SAACa,EAAA,EAAD,KAAa,SAACC,EAAA,EAAD,CAAYhB,OAAQA,MAGnD,E","sources":["webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Searchbar_searchForm__Bt5yh\",\"searchInput\":\"Searchbar_searchInput__+BnhG\",\"searchButton\":\"Searchbar_searchButton__8lE-T\",\"searchLabel\":\"Searchbar_searchLabel__yveFe\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { IconContext } from 'react-icons';\nimport { FaSearch } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport css from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n  const [lastQuery, setLastQuery] = useState('');\n\n  const handleSearchQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.info('Please enter a search query');\n      return;\n    }\n\n    if (query === lastQuery) {\n      toast.info(\n        'Sorry, the result of this request is already in front of you, try another way'\n      );\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n    setLastQuery(query);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.searchForm}>\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={query}\n          onChange={handleSearchQueryChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          className={css.searchInput}\n        />\n        <button type=\"submit\" className={css.searchButton}>\n          <IconContext.Provider value={{ color: '#007bff', size: 20 }}>\n            <FaSearch className={css.searchIcon} />\n          </IconContext.Provider>\n          <label className={css.searchLabel}>Search</label>\n        </button>\n      </form>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { searchMovies } from '../service/MoviesService';\nimport Searchbar from '../components/Searchbar';\nimport { Loader } from '../components/Loader/Loader';\nimport MoviesList from '../components/MoviesList';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const savedQuery = searchParams.get('query');\n    if (savedQuery) {\n      setQuery(savedQuery);\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      if (query === '') {\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        const searchedMovies = await searchMovies(query);\n        setMovies(searchedMovies);\n\n        if (searchedMovies.length === 0) {\n          toast.info('No movies found.');\n        }\n      } catch (error) {\n        throw new Error('Failed to search movies');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovies();\n  }, [query]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query });\n    setQuery(query);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {isLoading ? <Loader /> : <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;"],"names":["onSubmit","useState","query","setQuery","lastQuery","setLastQuery","e","preventDefault","trim","toast","className","css","type","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","color","size","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","savedQuery","get","searchMovies","searchedMovies","length","Error","fetchMovies","Loader","MoviesList"],"sourceRoot":""}